:PROPERTIES:
:ID:       ae8d6109-5878-4c2e-b2b7-a6aacb980687
:END:
#+title: transformations (Pattern -> Pattern) in TidalCycles
* there are also some [[id:033d8efb-23b7-4097-9dc6-9bce38931c7f][random ones]]
* BROKEN: [[id:60746819-124f-4157-9f0e-9649183f865a][flatpat :: pattern of lists -> pattern of simultaneous events]]
* BROKEN : [[id:4938e0cf-8c59-4482-a948-b599db82e16a][quantise n pat : rond values in pat to multiples of n]]
* [[id:312aa85f-b9a4-4fd4-bd11-aebfe91ad766][dividing patterns in Tidal]]
* hurry is like fast, but with a speed transformation
* palindrome p = p, then reverse p
  so twice as long as p
** [[id:d0fe9253-4db6-4f8d-b218-d1d706ae9f87][conjugate a palindrome]]
* granular effects
** chop n
#+begin_src haskell
  d1 $ chop ((irand 16 + 1) * 64) $ sound "bev"
#+end_src
** striate n : "like chop n" (???)
#+begin_src haskell
  d1 $ striate 2 $ sound "bev"
#+end_src
** randslice n : choose one of n slices randomly
#+begin_src haskell
  d1 $ randslice 16 $ sound "numbers*64" |* n (irand 10)
#+end_src
** loopAt n : stretch sample to fit n cycles
#+begin_src haskell
  d1 $ stack [
    loopAt 8 $ sound "bev",
    every 4 (fast 2 . (<~) (1/4))
      $ slow 4 $ palindrome $ fast 4
      $ s "bd [sn:1*2 [[hc*2] [bd,lt*2]]/2]/2",
    slow 4 $ (1/4) <~ s "gabba sn:1"
      |*| speed "0.5 0.25"
      |*| amp 0.2 ]
#+end_src
