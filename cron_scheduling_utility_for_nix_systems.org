:PROPERTIES:
:ID:       021b029e-c533-4074-a280-0c8a2a6215bc
:END:
#+title: cron (scheduling utility for *nix systems)
* PITFALLS
** relative paths and command aliases are dangerous!
   I was calling a python script from `cron` via `python3` which called another via the same command. But whereas the first resolved to the conda-installed python3.8 as hoped for, the second was resolving to the apt-installed python3.7. The solution was to never say `python3` and hope to be understood; instead give the full path to the executable (or a symlink to it).
** req's for files in cron.d
   "must be owned by root, and must conform to run-partsâ€™ naming conventions (no dots, only letters, digits, underscores, and hyphens)."
   https://unix.stackexchange.com/a/417327
   And maybe they need `chmod 644` permissions, at least when in cron.d/.
** by default, nobody but root can use cron
   But create an empty /etc/cron.deny file, and then every user can use cron. (The tax.co Docker container already has this.)
** for Docker, must disable some kind of pam security policy
   specifically the `pam_loginuid` line in
     /etc/pam.d/crond
   per this advice:
     https://stackoverflow.com/a/21928878/916142
   (The tax.co Docker container already has this.)
* how to
** how to start cron : `service cron start`
** how to check if the cron daemon is running
   Look for `cron` in the output of
     ps -ef
** how write/edit a cron job
*** It does not use the global PATH.
   Either modify the PATH variable defined in that file, or use the full path to the desired command, or both.
   That's because the PATH defined in the file does not necessarily match the PATH defined in the shell.
*** The primary crontab files* require user names.
    * that is, /etc/crontab and /etc/cron.d/*
    So, e.g., this doesn't work
      * * * * *      /opt/conda/bin/python /mnt/write-time.py
    Instead do something like this:
      * * * * * root /opt/conda/bin/python /mnt/write-time.py
** where to add cron jobs
   Adding files to
     /etc/cron.d/<any file>
   appears to be the preferred way.
   I can ignore /etc/crontab. (Maybe editing it would be effective, but it seems unidiomatic.)
