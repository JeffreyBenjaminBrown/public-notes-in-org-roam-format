:PROPERTIES:
:ID:       5dd27b65-8dba-4c85-82f2-fad3464b3462
:ROAM_ALIASES: Emacs
:END:
#+title: Emacs (programamble text editor)
* PITFALL: Variable names in a function carry into a function it calls, if that called function has no definition to mask the name.
* [[id:3844ba4b-ad9b-4ff5-aa09-528d62ff9d7f][randomize the order of some org branches, how to]]
* [[id:b2f2afd9-4d20-454f-9c61-8974ef675c24][run Emacs under GDB]]
* TODO [[id:ea81b91a-59f1-4de3-af92-558a828294b3][ChatGPT says I can use 'avy' to jump to the start of words.]]
* Emacs FFIs
** [[id:c632bb06-65b6-44f7-89b9-31831288f571][Consider using a REST API rather than an FFI in Emacs.]]
** [[id:1c905ed6-fbc3-4e99-97b8-dd73c7ab6a13][Emacs FFI to C++]]
** [[id:7dc80212-9f73-4b89-b013-fd8b40d72021][The Emacs FFI to C is very inconvenient.]]
** [[id:959a778f-4e9a-4f41-91ac-278f6d3883e1][haskell-emacs]] has bit-rotted.
* [[id:19f1effe-2776-48af-8cc7-32eca1b432f7][registers and bookmarks in emacs]]
* [[id:80be0156-3e35-499e-a14b-9aa5803e715f][making big programs in Emacs]]
* [[id:30820f8e-85d1-43c9-89e8-c763b6864d2d][outline-mode for Emacs]]
* TODO [[id:f67b3ffb-c806-4279-bc8a-f0b35291bf42][BROKEN: Cannot rebind `C-c @ TAB` in outline-minor-mode]]
* [[id:19a2966d-79dc-49e9-b7a7-5dea84a19672][PITFALL: Currently (<2022-07-06 Wed>) Python mode can't handle triple quotes. Don't use them for a while.]]
* [[id:a10a04e8-5b2b-4f75-93ec-f1d2082f2a3c][sexp and list commands in Emacs]]
* [[id:3a230207-47a8-4dde-af88-2c442f5c51aa][Erlang and Emacs]]
* some big single-page manuals
  https://www.emacsdocs.org/
* [[id:bf8eaf41-f3ae-4f8c-88bf-9baaed457cc0][regex in Emacs]]
* TODO There are [[id:a922b10f-30e2-4720-b1bf-6d934e6e715c][cool tricks buried here]].
* TODO ? [[id:31c4c9f3-fb7a-4028-b84a-8406d0e91f48][org-drill does spaced repetition]]
* TODO ? orderless in Emacs
  :PROPERTIES:
  :ID:       2ff6f8b0-1089-468f-bb3b-86646342fb73
  :END:
  https://github.com/oantolin/orderless
* TODO Emacs: how to override elpy's C-c C-d?
(require 'org) ;; so that the next line knows what org-mode-map is
(eval-after-load 'org
  (progn
    (define-key org-mode-map (kbd "C-c C-d")
      ;; disable because it conflicts with my assignment for smart-hungry-delete-forward-char
      nil)))
(require 'elpy)
(eval-after-load 'python
  (progn
    (define-key elpy-mode-map (kbd "C-c C-d")
      ;; disable because it conflicts with my assignment for smart-hungry-delete-forward-char
      nil)))
* TODO do I want org-roam to work with company? helm? both?
  :PROPERTIES:
  :ID:       80c451e8-da34-4d5f-8483-f3e3b56ff16b
  :END:
* PIFALL: might need (require '<package name>) when first installinga
  Evaluating that may have allowed me to get some packages working that otherwise weren't. But later I was able to run them without having that expression in my .emacs file.
* TODO ask about | look for
** next/previous non-whitespace
** something to show brackets, parens, etc. in another color?
** I would like the highlight to remain after changing the indentation of a lot of adjacent bullets, so that I can do it again.
* [[id:03544662-5978-4b88-8984-bd12eea5e8a1][Emacs packages]]
* remember, commands
** [[id:64e4a0e8-1cf3-4edc-9c51-237ad1a8efeb][find-grep (Emacs command)]]
** [[id:8618f3f0-b5ba-47b2-acb2-82bd9244ad93][special characters in Emacs]]
   tag ñíáéóú tilde circumflex Spanish
** Alt-(up / down) : make two paragraphs trade places in Emacs
   similar to org-mode with bullets
** M-m: first non-whitespace char in line
** C-c C-(f/b): org next/previous same level
** Up, down and search work in the minibuffer after M-x.
* solutions
** another view of the same buffer : "indirect buffer"
   Has a separate point, separate markers, etc. but same text.
** to disable blinking cursor
   (setq visible-cursor nil) ;; Dumb name! It just stops blinking.
** [[id:92505b5e-61fc-494f-a610-9b37a27a6fdd][Emacs / help]]
** to jump between lines fast
*** not a great solution : [[id:7168c237-a2a5-477d-a7a2-62ba55b465ce][key-leap (Emacs minor mode)]]
    Slow, too hard to read.
** [[id:b7246e61-fb94-48b1-b34b-2981e60fc860][insert a column of increasing numbers in Emacs]]
** to insert (write) date, and maybe time, at point
   :PROPERTIES:
   :ID:       76f955ac-1f33-4b6b-bedb-e85852a486b9
   :END:
*** it'll probably take a little editing, given my preferences
*** the commands
	C-c .              ;; writes date
	M-x org-time-stamp ;; writes date
    C-u C-c .              ;; writes date and time
    C-u M-x org-time-stamp ;; writes date and time
** [[id:03df14dd-9536-4302-aa53-d51e3d1de100][grepping folders in Emacs]]
** [[id:7ca4fa12-5fc2-415c-8d2f-5d6167e8dd95][hide lines programmatically from a file in Emacs]]
** [[id:7dc33cd5-40bc-421a-aa1d-a40cf0635119][to tag(build a tags file) python code for use in emacs]]
** wrap lines at word boundaries
   M-x visual-line-mode
** run Emacs in terminal, without opening an X window
   :PROPERTIES:
   :ID:       8402b50d-74ca-4279-b4d6-dde1cebdae65
   :END:
   emacs -nw
   emacs -nw --no-init-file
** run Emacs without using an init file
   emacs --no-init-file
** test major mode
*** PITFALL: It might be better to define the keymap.
**** why
     Rather than writing a function that tests the major mode
     and only works if it's equal to some value,
     I can define that function globally,
     and define a keyboard shortcut for it in that major mode.
**** how
     (define-key org-mode-map (kbd "C-c C-o") 'jbb-org-open-at-point)
*** define a function that does nothing outside of some major mode
    (defun jbb-org-open-at-point ()
      (interactive)
      (if ;; Here's the test
          (equal "org-mode" (symbol-name major-mode))
          (progn (call-interactively 'org-open-at-point)
   	      (delete-other-windows))
	(message ("jbb-org-open-at-point does nothing outside of org-mode."))
    ))
** [[id:3d093f8d-9215-4c56-b3e4-eb7a2b8beeee][rectangles in Emacs]]
** [[id:3b4440e1-ef04-4637-b22d-cbdb60d58329][switching buffers in Emacs]]
** [[id:debbace4-173e-4dd7-99ac-a7a806905640][yasnippet + hide-lines, my hack for Emacs & TidalCycles]]
** [[id:78800196-3115-4ffb-b949-ac83bef44448][find (recursively) a filename via regex]]
