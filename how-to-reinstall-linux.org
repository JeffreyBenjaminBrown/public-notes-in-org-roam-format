:PROPERTIES:
:ID:       f6036dfe-2338-4f5f-adbb-19178764b16b
:ROAM_ALIASES: "install linux"
:END:
#+TITLE: linux, how to reinstall
* TODO [[id:4f42f437-d17f-4c5a-b980-efe0775e15b4][KDE lets you export a shortcut scheme!]]
* TODO PITFALL: Don't keep more than one USB drive plugged in at once
when doing big write ops.
November 2020 I did that, tried to write NixOS 20.09 onto one of them,
and ended up overwriting the other two.
* TODO PITFALL: Don't inspect a drive being written to.
November 2020 I did that: while writing NixOS 20.09 onto a USB drive,
I tried running ls or du or something on it.
`dd` got confused and ended up overwriting two other USB drives instead.
* TODO PITFALL: Treat shell commands sketpically
These notes were taken 2019-07-01. They could go stale.
The basic ideas are probably stable for a long time,
but specific commands might not be.
* TODO where are my dot files?
Whatever, they'll be in the backup.
* TODO backup the HD
* TODO add org-roam to config
emacs26Packages.org-roam
* burn a distro onto USB
https://www.linux.com/tutorials/how-burn-iso-usb-drive/
** use “fdisk -l”  to find the USB device
It will be /dev/something
** Make sure the USB device is unmounted
   e.g. umount /dev/sdb1
** copy
dd bs=4M if=<input file> of=<output file>
For instance, I most recently ran this (from ~/Downloads):
sudo dd bs=4M                                                  \
  if=nixos-graphical-19.03.173549.ebdc4419310-x86_64-linux.iso \
  of=/dev/sdb
* restore data
borg list /path/to/repo             # lists snapshots
borg extract/path/to/repo::snapshot
* for coding
** Docker
*** install, ala https://docs.docker.com/install/linux/docker-ce/ubuntu/
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
<Do a complex thing, see website, to verify the download.>
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
sudo apt update
sudo apt-get install docker-ce docker-ce-cli containerd.io
sudo docker run hello-world     # verify that it works
*** un-sudo, ala https://docs.docker.com/install/linux/linux-postinstall/
sudo groupadd docker
sudo usermod -aG docker $USER
docker run hello-world    # verify
*** get these images
jeffreybbrown/freeplane:latest
jeffreybbrown/tax.co:2019-09-20.pandas-0-25-1
** configure git
git config --global user.email "jeffbrown.the@gmail.com"
git config --global user.name "JeffreyBenjaminBrown"
git config --global credential.helper cache
** stack
It griped that "/home/jeff/.local/bin" is not in my PATH.
.profile says it is, when it exists (it doesn't yet).
But maybe .bashrc is what matters.
* The rest of these might be irrelevant under NixOS
** restore data
*** Borg
 apt install borgbackup
 borg list /path/to/repo             # lists snapshots
 borg extract/path/to/repo::snapshot
*** Encfs
**** sudo apt install encfs
**** "install" Mortiz Encfs Manager
 Just copy the binary and make it executable
 (chmod +x filename).
 https://moritzmolch.com/apps/mencfsm/index.html
** apt upgrade
 sudo apt update && sudo apt upgrade -y
** Settings
*** search for "virtual (desktops)"
**** choose 16 desktops in 4 rows
**** in the "switchiing" panel, set shortcuts
*** search for "(desktop) grid", set shortcuts
*** Search for "zoom", set shortcuts
*** turn off the hot "corner"
*** under Input Devices, swap Caps and Esc
** Emacs
*** sudo add-apt-repository ppa:ubuntu-elisp/ppa
*** sudo apt-get update
*** sudo apt-get install emacs-snapshot
*** maybe the customizations work already
 See "emacs customizations" below.
 If they can't be installed yet, then until customized,
 run "M-x load-theme m-dark"
 for readability.
*** install packages
**** `M-x package-install` these packages
 haskell-mode
 elpy
 exec-path-from-shell
** Brave > Chrome
 sudo apt install -y curl
 curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
 source /etc/os-release
 echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ $UBUNTU_CODENAME main" | sudo tee /etc/apt/sources.list.d/brave-browser-release-${UBUNTU_CODENAME}.list
 sudo apt update
 sudo apt install -y brave-keyring brave-browser
** sound | music
*** KXStudio
**** install kxstudio
 sudo apt-get install -y apt-transport-https software-properties-common wget
 wget https://launchpad.net/~kxstudio-debian/+archive/kxstudio/+files/kxstudio-repos_9.5.1~kxstudio3_all.deb
 sudo dpkg -i kxstudio-repos_9.5.1~kxstudio3_all.deb
**** enable GCC5 packages
 sudo apt-get install -y libglibmm-2.4-1v5
 wget https://launchpad.net/~kxstudio-debian/+archive/kxstudio/+files/kxstudio-repos-gcc5_9.5.1~kxstudio3_all.deb
 sudo dpkg -i kxstudio-repos-gcc5_9.5.1~kxstudio3_all.deb
**** sudo apt install -y kxstudio-default-settings
**** then install the meta packages
 PITFALL: Play guitar or something while watching the screen,
 because Microsoft will pause the process at some point to ask for consent.
 sudo apt install -y \
   kxstudio-meta-audio \
   kxstudio-meta-graphics \
   kxstudio-meta-video \
   kxstudio-meta-restricted-extras \
   kxstudio-meta-wine
**** PITFALL: sudo apt install -y pulseaudio-module-jack
 That's not part of the KX instructions, but I needed to.
 Found it here:
 https://www.linuxmusicians.com/viewtopic.php?t=11535
*** configure, test sound
**** apt upgrade again
 sudo apt update && sudo apt upgrade -y
**** in Cadence
 configure sound card
 tell it to start Jack and itself on startup
**** reboot
**** play something
 e.g. visit Youtube
*** Pianoteq
 copy the .so file to /usr/lib/vst
 copy the sedded lv2 folder to /usr/lib/lv2
*** SuperCollider
*** Bitwig
*** SKIPPING -- Native Instruments
 see "installs/native instruments komplete/README_jbb.org"
