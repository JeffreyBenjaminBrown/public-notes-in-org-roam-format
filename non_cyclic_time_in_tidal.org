:PROPERTIES:
:ID:       97077393-00b2-41d1-8fec-7763b936a0f8
:END:
#+title: non-cyclic time in Tidal
* refs
** transitions
   https://tidalcycles.org/docs/patternlib/tour/transitions/
** "composition functions"
   https://tidalcycles.org/docs/reference/composition/
* TODO How are `anticipateIn` and `jumpIn` different?
* `once` is handy.
  It requires no pattern name, and can't be stopped.
  once $ s "trump"
* `xfade <voice name>` and `xfadeIn <number of cycles> <voice name>`
  p "drums" $ s "bd(3,8) drum*4"
  xfade "drums" $ s "arpy*8" # n (run 8)
* `clutch(In)`: Like `xfade(In)` using random grains instead of volume.
* `anticipate(In)`: apply pattern to voice in the future
* `interpolate(In)`: morph parameters
  d1 $ sound "arpy*16" # cutoff 100
  interpolate 1 $ sound "arpy*16" # cutoff 16000
* `jumpIn(')`: change patterns in the future.
  jumpIn' is aligned to cycle boundaries;
  jumpIn is not.
* TODO `jumpMod`: I don't understand.
* TODO `wait(In)`: not described
* the "composition" functions let you escape, somewhat, the looping paradigm
