:PROPERTIES:
:ID:       41078ddd-4ec0-45fe-a799-3f8d00aa81d8
:ROAM_ALIASES: "Nu shell" "Nushell"
:END:
#+title: NuShell
* u, <2022-11-22 Tue>
** Many people use direnv to load an environment upon entering a directory as well as unloading it when exiting the directory.
** View git comitter activity as a histogram
      Note: the histogram command is not yet ported to the latest version

      > git log --pretty=%h»¦«%aN»¦«%s»¦«%aD | lines | split column "»¦«" sha1 committer desc merged_at | histogram committer merger | sort-by merger | reverse
      ━━━━┯━━━━━━━━━━━━━━━━
** Delete git merged branches
      Warning: This command will hard delete the merged branches from your machine. You may want to check the branches selected for deletion by omitting the last git command.

      > git branch --merged | lines | where ($it != "* master" && $it != "* main") | each {|br| git branch -D ($br | str trim) } | str trim
      Output
** Suppose you would like to check the number of lines the string "Value" appears per file in the nushell project, then sort those files by largest line count.

      > rg -c Value | lines | split column ":" file line_count | into int line_count | sort-by line_count | reverse
      Output
** section.

      > open Cargo.toml | upsert package.version { |p| $p | get package.version | inc --patch } | save Cargo.toml
      Output none
** open Cargo.toml | get package.version
** Clip copies to clipboard but only for text
*** sys | get mem | to json | clip
** liner:

      > ps | where name == Notepad2.exe | get pid.0 | kill -9 $in
      Output
** > ps | where cpu > 0 | sort-by cpu | reverse
** ls | where type == file
* TODO RESUME here
  https://www.nushell.sh/book/moving_around.html
* refs | getting started
** resources and community
   https://www.nushell.sh/book/
** how to launch it
   Evaluate "nu" in a terminal.
** [[id:ec00b28d-ed95-4f51-a871-408432ae119f][Getting help in Nu.]]
* [[id:bbdfdca4-a681-4e8e-aa63-e5b701c7ce27][Nu syntax]]
* [[id:4dbfdf07-f760-403d-9bcf-cddd14154fd1][types in Nu]]
* [[id:5da58f4b-df98-4c2b-8bdf-87ba1f07a068][evaluation in Nu]]
* [[id:b4dc908e-68a5-4f64-ab65-20105484a3ae][Nu scripts]]
* PITFALLS
** [[id:ab12a1d1-e282-4dcb-b544-9ab765e209b1][Not every well-formed expression appears to have a type.]]
** [[id:9930ed50-577c-4efe-bafe-e99c2a4b1711][Nu builtins versus external-to-Nu commands.]]
** evaluating a path P is like evaluating "cd P"
