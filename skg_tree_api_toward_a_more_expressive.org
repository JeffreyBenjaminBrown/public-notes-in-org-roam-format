:PROPERTIES:
:ID:       c7c81ed5-20f6-4b6b-a147-edd8175d3cca
:END:
#+title: skg : tree API, toward a more expressive
* kinds of things I will need to show
** [[id:722f7290-991c-4549-a9b8-88cc6d158ff4][intermediating metadata branches]]
*** [[id:b72d4277-eced-48b9-85da-b917d9a4aad4][aliases]]
** [[id:324f020b-1145-4279-a87a-02c96dce7a30][omits-some-content herald: "{+"]]
** [[id:0254b98c-30e6-49de-af3f-c17871c356da][containerward view]]
* Rust data model
** types
#+begin_src rust
OrgNodeText = Heading, Opt<Body>, Branches
pub OrgNode = ContentNode | ContainerNode | AliasList
pub ContentNode   = Heading, Opt<Body>, Branches, Opt<List<Alias>>
pub ContainerNode = Heading, Opt<Body> // Later, will have branches and alias list, like ContentNode.
pub AliasList     = List<String>
#+end_src
** about them
Each org node's relationship to its org-container is part of its own data, not its org-container's. That way an org-container can relate differently to its different org-children.
* Emacs data model
** ContentNode
   'id' present.
** ContainerNode
   'id' present.
   'type' = 'container'.
** AliasList
   'type' = 'alias-list'.
* how Emacs shows the data
** ContentNode
   Has an 'id' herald.
** ContainerNode
   Has an 'id' herald.
   Has a 'contains' herald, probably "}".
** AliasList
   Has an 'aliases' herald, equal to the word.
   The body (provided by Rust) gives instructions:
   One alias per sub-heading; further data ignored.
* how Rust processes the data
** Transform org text to OrgNodeText forest.
** Transform OrgNodeText to OrgNode.
*** ContainerNodes, for now, can be discarded.
*** AliasNodes modify the node containing them.
    Later that will be true even when
    the container is a ContainerNode.
** Write the OrgNodes to disk and dbs.
   For now, just act on the ContentNodes.
   Given a content node N, try to read the file corresponding to it into a FileNode. If that works, conditionally replace elements of the FileNode. If the alias list is None, retain the original; otherwise replace it. Replace the contents. (Later, with the omits-some-content attribute, content will become optional too, and treated the same way as the aliases.)
** Regenerate the file.
   For now, obliterate any containerward views and alias lists.
