:PROPERTIES:
:ID:       082cfa49-50e3-4332-9072-282b65aad5eb
:ROAM_ALIASES: "image manipulation" "digital image manipulation" "pdf manipulation" "png manipulation" "jpg manipulation" "jpeg manipulation"
:END:
#+title: some ways to manipulate digital documents
These notes were (all?) taken to apply for my [[id:fb125111-a65d-4aee-ac47-918b55572a97][visa renewal for Colombia]].
* PITFALLS
** pdftk does not like filenames that are numbers
   even if the extensions are alphabetical and preceded by a dot
   e.g. 1.pdf is bad, but d1.pdf is ok
* downsample jpegs *before* converting to pdf
This keeps the memory footprint small.
Converting afterward works much worse.
Convert with `convert` (imagemagick), but concat with `pdftk`.
  Concatenating pdfs with `convert` seems to waste space.
  (Using the same to concatenate non-pdfs into one pdf might be okay.)
* how to format a headshot for a Colombian visa
  :PROPERTIES:
  :ID:       53bb194e-7b52-48ad-91a8-1621010c4462
  :END:
  Use the Passport Photo Editor app.
* how to downsample a jpeg
  First check its dimensions with `file`.
  Then choose new dimensions, and run
  `convert input.jpg -resize 600x400\> output.jpg`
* to extract tables from PDFs
** [[id:6f854ffc-8eb8-4ac8-823c-fd8b61f90562][Tabula (software to extract tables from PDFs)]]
* to remove encryption from a PDF
  qpdf --password=YOURPASSWORD-HERE --decrypt input.pdf output.pdf
* how to concatenate mixed-format images into a pdf
** pdfunite
   Part of the poppler-utils package.
   pdfunite 1.pdf 2.pdf output.pdf
** imagemagick
   Once, it had memory and resolution problems.
   But the last time I tried it worked fine,
   joining .jpg files into a pdf.
   convert x.pdf y.bmp z.png output.pdf
* how to concatenate pdfs with pdftk
  pdftk file1.pdf file2.pdf file3.pdf cat output newfile.pdf
* how to cut and concatenate pages with pdftk
  pdftk input.pdf cat 1-7 9 11-end output merged.pdf
  pdftk big.pdf cat 5-6 output middle.pdf
* how to downsample with gs (ghostscript)
# This downsamples a color image:
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dDownsampleColorImages=true -dColorImageResolution=140 -dNOPAUSE  -dBATCH -sOutputFile=small.140.pdf input.pdf
* how to find the dimensions of a pic
Run "file", look for "height" and "width".

bash$ file contract-1.jpg
contract-1.jpg: JPEG image data, Exif standard: [TIFF image data, big-endian, direntries=13, height=4032, bps=0, manufacturer=HUAWEI, model=TRT-L53, xresolution=186, yresolution=194, resolutionunit=2, software=TRT-L53C469B196, datetime=2020:08:13 15:56:05, GPS-Data, width=3016], baseline, precision 8, 3016x4032, components 3
* DONE install
pdftk, gs, gimp
and maybe install imagemagick
* DONE convert to grayscale
** ghostscript: works!
gs \
 -dAutoRotatePages=/None \
 -sOutputFile=gray/output.pdf \
 -sDEVICE=pdfwrite \
 -sColorConversionStrategy=Gray \
 -dProcessColorModel=/DeviceGray \
 -dCompatibilityLevel=1.4 \
 -dNOPAUSE \
 -dBATCH \
 input.pdf
** gimp: works, but uses a lot of memory
image / mode / grayscale
** imagemagick ("convert"): quality sucks
convert -colorspace GRAY color.pdf gray.pdf
convert -colorspace GRAY dian.pdf gray/dian.pdf
* DONE cut empty pages
Notaria
  pdftk notaria.pdf cat 1 output notaria-no-blanks.pdf
Davivienda (both)
  pdftk davivienda,8-faces.pdf cat 1-5 7-9 \
    output davivienda,8-faces,no-blanks.pdf
  pdftk davivienda,11-faces.pdf cat 1-3 5-7 9-11 13-14 \
    output davivienda,11-faces,no-blanks.pdf
