:PROPERTIES:
:ID:       5cd33c0a-78f1-4fc1-8e53-6fb00cf79a2c
:END:
#+title: Testing in Django
see polls.tests in my sample project at
  https://github.com/JeffreyBenjaminBrown/learning-aws.git
* automatically-run tests
** they use a fresh database
Each time a test method (smaller than a test class) runs,
it uses a fresh "test database" that starts empty.
** PITFALL: names matter
 Test files and test methods must start with "test".
 Not so, though, the classes which the tests are methods of.
** run the tests from the shell
python manage.py test polls
* interactive tests
These use the existing database.
** enter a testing environment
*** enter the repl:
python manage.py shell
*** do this in the repl
from django.test.utils import setup_test_environment
setup_test_environment()
from django.test import Client
client = Client()
** test some URLs
# This should fail, because there's nothing at '/'
response = client.get('/')
response.status_code

# This should succeed
from django.urls import reverse
response = client.get(reverse('polls:index'))
response.status_code
response.content
response.context['latest_question_list']
* assertions: at least three kinds
** assertEqual
** assertContains
For the content of a response.
** assertQuerysetEqual
Can treat the set as ordered or not.
TODO: Is this better than assertEqual?
